/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.htw.saarland.gamedev.nap.launcher.panels;

import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;

import com.smartfoxserver.v2.entities.data.SFSArray;
import com.smartfoxserver.v2.entities.data.SFSObject;

import de.htw.saarland.gamedev.nap.server.extension.launcher.LauncherOpcodes;
import sfs2x.client.SmartFox;
import sfs2x.client.core.BaseEvent;
import sfs2x.client.entities.Room;
import sfs2x.client.requests.ExtensionRequest;

/**
 *
 * @author Pascal
 */
public class PanelGameInfo extends javax.swing.JPanel {

    private SmartFox sfClient;
    private Room room;
    
    private DefaultListModel<String> redTeam;
    private DefaultListModel<String> blueTeam;
    
    /**
     * Creates new form PanelGameInfo
     */
    public PanelGameInfo(SmartFox sfClient, Room room) {
        this.sfClient = sfClient;
        this.room = room;
        
        redTeam = new DefaultListModel<>();
        blueTeam = new DefaultListModel<>();
        
        initComponents();
        
        lblGameName.setText(room.getName());
        // TODO set map name
    }
    
    public void teamsChanged(SFSObject params) {
    	final SFSArray sfsRedTeam = (SFSArray) params.getSFSArray(LauncherOpcodes.RED_TEAM_STRUCTURE_ARRAY_PARAMETER);
    	final SFSArray sfsBlueTeam = (SFSArray) params.getSFSArray(LauncherOpcodes.BLUE_TEAM_STRUCTURE_ARRAY_PARAMETER);
    	
    	SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				redTeam.clear();
				blueTeam.clear();
				
				for (int i = 0; i < sfsRedTeam.size(); i++) {
					redTeam.add(i, sfsRedTeam.getUtfString(i));
				}
				
				for (int i = 0; i < sfsBlueTeam.size(); i++) {
					blueTeam.add(i, sfsBlueTeam.getUtfString(i));
				}				
			}
		});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblGameName = new javax.swing.JLabel();
        lblMapName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        buttonChangeTeam = new javax.swing.JButton();
        comboBoxCharacter = new javax.swing.JComboBox();
        toggleButtonReady = new javax.swing.JToggleButton();

        setLayout(new java.awt.GridBagLayout());

        lblGameName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGameName.setText("Game name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 3, 5);
        add(lblGameName, gridBagConstraints);

        lblMapName.setText("Map");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(lblMapName, gridBagConstraints);

        jList1.setModel(redTeam);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 5, 0);
        add(jScrollPane1, gridBagConstraints);

        jList2.setModel(blueTeam);
        jScrollPane2.setViewportView(jList2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 5, 5);
        add(jScrollPane2, gridBagConstraints);

        buttonChangeTeam.setText(">>|<<");
        buttonChangeTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeTeamActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        add(buttonChangeTeam, gridBagConstraints);

        comboBoxCharacter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODO", "load", "characters", "from", "file" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(comboBoxCharacter, gridBagConstraints);

        toggleButtonReady.setText("Ready");
        toggleButtonReady.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonReadyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(toggleButtonReady, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonChangeTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeTeamActionPerformed
        sfClient.send(new ExtensionRequest(LauncherOpcodes.LAUNCHER_CHANGE_TEAM_REQUEST, null, sfClient.getLastJoinedRoom()));
    }//GEN-LAST:event_buttonChangeTeamActionPerformed

    private void toggleButtonReadyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonReadyActionPerformed
        sfClient.send(new ExtensionRequest(LauncherOpcodes.LAUNCHER_CHANGE_READY_REQUEST, null, sfClient.getLastJoinedRoom()));
    }//GEN-LAST:event_toggleButtonReadyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonChangeTeam;
    private javax.swing.JComboBox comboBoxCharacter;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGameName;
    private javax.swing.JLabel lblMapName;
    private javax.swing.JToggleButton toggleButtonReady;
    // End of variables declaration//GEN-END:variables
}
